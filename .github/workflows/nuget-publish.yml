name: Publish NuGet Package

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*.*.*'
      - '*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: 1.0.0)'
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            7.0.x
            8.0.x
            9.0.x
      - name: Set version variable
        id: vars
        run: |
          if [ "${{ github.event.inputs.version }}" != "" ]; then
            echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}
            echo "VERSION=$VERSION" >> $GITHUB_ENV
          else
            echo "VERSION=1.0.0" >> $GITHUB_ENV
          fi
          echo "Version set to: $VERSION"

      # - name: Create Tag
      #   id: create_tag
      #   run: |
      #     git config user.name "github-actions"
      #     git config user.email "github-actions@github.com"
      #     git tag v${{ env.VERSION }}
      #     git push origin v${{ env.VERSION }}

      # - name: Create GitHub Release
      #   id: create_release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: v${{ env.VERSION }}
      #     name: Release v${{ env.VERSION }}
      #     draft: false
      #     prerelease: false

      - name: Restore dependencies
        run: dotnet restore Mem0.Net.csproj

      - name: Build
        run: dotnet build Mem0.Net.csproj --configuration Release --no-restore

      - name: Pack
        run: dotnet pack Mem0.Net.csproj --configuration Release --no-build --output ./nupkg

      - name: List generated packages
        run: ls -la ./nupkg/

      - name: Publish to NuGet
        uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: ./nupkg/*.nupkg

      - name: Push to NuGet.org
        run: |
          echo "Publishing packages to NuGet.org..."
          for package in ./nupkg/*.nupkg; do
            echo "Publishing: $package"
            dotnet nuget push "$package" \
              --api-key "${{ secrets.NUGET_API_KEY }}" \
              --source https://api.nuget.org/v3/index.json \
              --skip-duplicate
          done
